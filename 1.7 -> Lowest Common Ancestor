Approch:
--------
p = 5, q=4
step1 -> check karta jainga p ya q sa value match ho rha hai
step2 -> agr ho rha hai tho root return kar denga
step3 ->//4case banega
        //case1: agr left and right sa null aai tho return null
        //case2 : agr left sa null aya right sa null nai aya return right
        //case3 : agr left sa null na aai and right sa null aaai tho return left
        //case4 : agr dono side sa null nai aya tho mtln uska parent root hi hai
     
        
code:
----
 TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        //basecase
        if(root==NULL){
            return NULL;
        }

        if(root->val == p->val or root->val == q->val){
            return root;
        }

        TreeNode* leftAns= lowestCommonAncestor(root->left,p,q);
        TreeNode* rightAns = lowestCommonAncestor(root->right,p,q);

        //4case banega
        //case1: agr left and right sa null aai tho return null
        if(leftAns == NULL and rightAns == NULL){
            return NULL;
        }

        //case2 : agr left sa null aya right sa null nai aya return right
        if(leftAns !=NULL and rightAns == NULL){
            return leftAns;
        }
        
        //case3 : agr left sa null na aai and right sa null aaai tho return left
        if(leftAns == NULL and rightAns != NULL){
            return rightAns;
        }

        //case4 : agr dono side sa null nai aya tho mtln uska parent root hi hai
        // if(leftAns != NULL and rightAns != NULL){
        //     return root;
        // }
        else{
            return root;
        }
    }
