https://practice.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article

Approch:
----------
Yaha hum BFS khelenga

BFS mai queue cahiya hota hai
Queue mai 2 chiz store karenga
Ek node, vertical_order
Queue<node*,verticalOrder>

Yaha vetical/col ka hisaba sa data store hoga MAP mai
Ex: map<vetical,node->data>

Code:
----
vector <int> bottomView(Node *root) {
        vector<int> ans;
        
        if(root == NULL){
            return ans;
        }
        
        map<int,int> verticalAndNodesData;
        
        //bfs use karenga
        // uska lia queue cahiya hoga
        //queue mai hum node and vertical Ordered(-2,-1,0,1,2) yeah dalenga
        queue<pair<Node*,int>> q;
        q.push(make_pair(root,0));
        
        while(!q.empty()){
            int q_size = q.size();
            while(q_size !=0){
                pair<Node*,int> front = q.front();
                q.pop();
                
                Node* node = front.first;
                int vertical = front.second;
                
                verticalAndNodesData[vertical] = node->data;
                
                if(node->left != NULL){
                    q.push(make_pair(node->left,vertical-1));
                }
                
                if(node->right != NULL){
                    q.push(make_pair(node->right,vertical+1));
                }
                
                q_size--;
            }
        }
        
        for(auto x: verticalAndNodesData){
            ans.push_back(x.second);
        }
        
        return ans;
        
    }
