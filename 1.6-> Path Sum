https://leetcode.com/problems/path-sum/#:~:text=Path%20Sum%20-%20LeetCode%20112.%20Path%20Sum%20Easy,A%20leaf%20is%20a%20node%20with%20no%20children.
Example 1:


Input: root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22
Output: true
Explanation: The root-to-leaf path with the target sum is shown.
Example 2:


Input: root = [1,2,3], targetSum = 5
Output: false
Explanation: There two root-to-leaf paths in the tree:
(1 --> 2): The sum is 3.
(1 --> 3): The sum is 4.
There is no root-to-leaf path with sum = 5.

APproch:
--------
-> root node sa minus krta hua ainga target ko
-> Leaf Node check karna hai baraar ho target
   value ka
-> phir recursive call marenga left && right ka
  lia
-> agr ek bhi true ajai left part ya right part
  mai return true.
 
code:
----
bool hasPathSum(TreeNode* root, int targetSum) {
        if(root==NULL)
            return false;
        
        if(root->val==targetSum && root->left == NULL && root->right ==NULL)
            return true;
        
        bool left= hasPathSum(root->left,targetSum - root->val);
        bool right=hasPathSum(root->right,targetSum - root->val);
        
        return left || right;
    }
